#!/usr/bin/python
# -*- coding: utf-8 -*-

# Pigeon Planner is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Pigeon Planner is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Pigeon Planner.  If not, see <http://www.gnu.org/licenses/>

"""
Pigeon Planner startup script
"""


import os
import os.path
import sys
from threading import Thread

try:
    import pygtk; pygtk.require('2.0')
except:
    print "The Python GTK (PyGTK) bindings are required to run this program."
    sys.exit(1)

import gobject
gobject.threads_init()

try:
    import gtk
except:
    print "The GTK+ runtime is required to run this program."
    sys.exit(1)


if __name__ == "__main__":
    # Detect our module path
    pp_dir = os.path.join(os.path.dirname(sys.argv[0]), '..')
    prefix = os.path.abspath(os.path.normpath(pp_dir))
    if not prefix.startswith('/usr'):
        sys.path.insert(0, pp_dir)

    from pigeonplanner import startup
    app = startup.Startup()
    #TODO: find a better (and crossplatform) way
    try:
        app.setup_logging()
    except WindowsError, exc:
        text = "The program or database tool is already running!"
        dialog = gtk.MessageDialog(None, 0, gtk.MESSAGE_ERROR, gtk.BUTTONS_OK, text)
        dialog.set_title("Already running - Pigeon Planner")
        dialog.run()
        dialog.destroy()
        raise SystemExit(text)
    app.setup_locale()
    app.setup_theme()
    app.setup_database()
    app.setup_pigeons()

    if app.options.update:
        updatethread = Thread(None, app.search_updates, None)
        updatethread.start()

    from pigeonplanner.ui import mainwindow
    pigeonplanner = mainwindow.MainWindow(app.options, app.db, app.parser)

    gtk.main()

